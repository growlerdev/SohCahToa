name: Build and Deploy

on:
  push:
    branches:
      - release/*
      - develop
      - main
      
jobs:
        
  Build:
    runs-on: windows-latest    

    steps:
    - name: Checkout codegit v
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.10
      with:
        versionSpec: '5.x'

    - name: Execute GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.10

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1

    - name: NuGet restore
      run: nuget restore
      
    - name: Build DotNet
      run: dotnet build -c Release           

    - name: Pack Projects
      run: dotnet pack --output artifacts --configuration Release /p:PackageVersion=${{ steps.gitversion.outputs.nugetversion }}

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v4.3.4
      with:
        name: nuget
        path: ./artifacts/*.nupkg
        retention-days: 1
        overwrite: true          
        
  Deploy:
    needs: Build
    runs-on: windows-latest

    # env:
    #   GROWLER_PACKAGES_JSON: ${{ secrets.GROWLER_PACKAGES_JSON }}
    #   GROWLER_GITHUB_PAT: ${{ secrets.GROWLER_GITHUB_PAT }}

    steps:

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        name: nuget
        path: ./artifacts          
          
    - name: show files
      run: dir

    - name: show artifacts
      run: dir artifacts

    - name: show packages json
      run: echo ${{ secrets.GROWLER_PACKAGES_JSON }}
    
    - name: Deploy to GitHub Packages      
      run: dotnet nuget push ./artifacts/*.nupkg  --api-key ${{ secrets.GROWLER_GITHUB_PAT }} --source ${{ secrets.GROWLER_PACKAGES_JSON }}

    - name: Deploy to NuGet.org
      run: dir

    - name: Tag Repo
      run: dir
